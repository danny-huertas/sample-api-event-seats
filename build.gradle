apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "jacoco"
apply plugin: "org.sonarqube"
apply plugin: "maven-publish"
apply plugin: 'org.liquibase.gradle'
apply plugin: 'net.researchgate.release'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

buildscript {
    configure([buildscript.repositories, project.repositories]) {
        mavenLocal()
        maven {
            url "${artifactory_contextUrl}${artifactory_resolver_repo}"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        mavenCentral()
        maven {
            name "spring-releases"
            url "https://repo.spring.io/milestone"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("net.researchgate:gradle-release:2.7.0")
        classpath("org.liquibase:liquibase-gradle-plugin:1.2.4")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.12.RELEASE")
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-sleuth:1.3.3.RELEASE'
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR7"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.cloud:spring-cloud-config-client")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-sleuth-core")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.yaml:snakeyaml:1.21")
    compile("com.h2database:h2:1.4.197")
    compile("org.liquibase:liquibase-core:3.6.1")
    compile("org.modelmapper:modelmapper:1.1.3")
    compile("org.apache.commons:commons-lang3:3.7")
    compile("io.springfox:springfox-swagger2:2.8.0")
    compile("io.springfox:springfox-swagger-ui:2.8.0")
    compile("org.hibernate:hibernate-java8:5.2.17.Final")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.5")

    testCompile("io.rest-assured:rest-assured:3.1.0")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.projectKey", "${group}:${rootProject.name}"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "${sonar_host}"
        property "sonar.login", "${sonar_username}"
        property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
        property "sonar.java.source property", "1.8"
    }
}

liquibase {
    def liquibaseChangeLog = project.findProperty('liquibaseChangeLog') ?: '/db/changelog/db.changelog-master.yaml'
    def liquibaseUrl = project.findProperty('liquibaseUrl') ?: 'jdbc:h2:mem:~/sample;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
    def liquibaseUsername = project.findProperty('liquibaseUsername') ?: 'sample'
    def liquibasePassword = project.findProperty('liquibasePassword') ?: 'sample'
    def liquibaseOutputFile = project.findProperty('liquibaseOutputFile') ?: 'liquibaseOuptput.sql'
    activities {
        main {
            changeLogFile liquibaseChangeLog
            url liquibaseUrl
            username liquibaseUsername
            password liquibasePassword
            outputFile liquibaseOutputFile
            classpath 'src/main/resources'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "${artifactory_contextUrl}${artifactory_publish_repo_prefix}-${version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
}

afterReleaseBuild.dependsOn publish

springBoot {
    buildInfo()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8